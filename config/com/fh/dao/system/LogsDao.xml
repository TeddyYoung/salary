<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.dao.system.LogsDao" >
  <resultMap id="BaseResultMap" type="com.fh.entity.system.Logs" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="operator_time" property="operatorTime" jdbcType="TIMESTAMP" />
    <result column="operator_type" property="operatorType" jdbcType="VARCHAR" />
    <result column="operator_menu" property="operatorMenu" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, operator, operator_time, operator_type, operator_menu
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fh.entity.system.LogsQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    id,operator,operator_time,operator_type,operator_menu
    from logs
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from logs
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fh.entity.system.LogsQuery" >
    delete from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fh.entity.system.Logs" >
    insert into logs (id, operator, operator_time, 
      operator_type, operator_menu)
    values (#{id,jdbcType=BIGINT}, #{operator,jdbcType=VARCHAR}, #{operatorTime,jdbcType=TIMESTAMP}, 
      #{operatorType,jdbcType=VARCHAR}, #{operatorMenu,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fh.entity.system.Logs" >
    insert into logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operatorTime != null" >
        operator_time,
      </if>
      <if test="operatorType != null" >
        operator_type,
      </if>
      <if test="operatorMenu != null" >
        operator_menu,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null" >
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorType != null" >
        #{operatorType,jdbcType=VARCHAR},
      </if>
      <if test="operatorMenu != null" >
        #{operatorMenu,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fh.entity.system.LogsQuery" resultType="java.lang.Integer" >
    select count(*) from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update logs
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorTime != null" >
        operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatorType != null" >
        operator_type = #{record.operatorType,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorMenu != null" >
        operator_menu = #{record.operatorMenu,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update logs
    set id = #{record.id,jdbcType=BIGINT},
      operator = #{record.operator,jdbcType=VARCHAR},
      operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      operator_type = #{record.operatorType,jdbcType=VARCHAR},
      operator_menu = #{record.operatorMenu,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fh.entity.system.Logs" >
    update logs
    <set >
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null" >
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorType != null" >
        operator_type = #{operatorType,jdbcType=VARCHAR},
      </if>
      <if test="operatorMenu != null" >
        operator_menu = #{operatorMenu,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fh.entity.system.Logs" >
    update logs
    set operator = #{operator,jdbcType=VARCHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      operator_type = #{operatorType,jdbcType=VARCHAR},
      operator_menu = #{operatorMenu,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>